def display_board(board):
  """Prints the Tic-Tac-Toe board."""
  print("-------------")
  for row in board:
      print("|", end="")
      for cell in row:
          print(f" {cell} |", end="")
      print("\n-------------")

def check_win(board, player):
  """Checks if the given player has won."""
  # Check rows
  for row in board:
      if all(cell == player for cell in row):
          return True

  # Check columns
  for col in range(3):
      if all(board[row][col] == player for row in range(3)):
          return True

  # Check diagonals
  if (board[0][0] == player and board[1][1] == player and board[2][2] == player) or \
     (board[0][2] == player and board[1][1] == player and board[2][0] == player):
      return True

  return False

def is_board_full(board):
  """Checks if the board is full."""
  return all(cell != " " for row in board for cell in row)

def get_player_move(board, current_player):
  """Gets the player's move and validates it."""
  while True:
      try:
          row = int(input(f"Player {current_player}, enter row (1-3): ")) - 1
          col = int(input(f"Player {current_player}, enter column (1-3): ")) - 1
          if 0 <= row <= 2 and 0 <= col <= 2 and board[row][col] == " ":
              return row, col
          else:
              print("Invalid move. Try again.")
      except ValueError:
          print("Invalid input. Please enter numbers.")

def reset_game():
  """Resets the game board and returns the initial state."""
  board = [[" " for _ in range(3)] for _ in range(3)]
  current_player = "X"
  return board, current_player

# Initialize the game
board, current_player = reset_game()

# Game loop
game_running = True  # Flag variable to control the game loop

while game_running:
  display_board(board)

  print(f"Current player: {current_player}") 

  row, col = get_player_move(board, current_player)
  board[row][col] = current_player

  if check_win(board, current_player):
      display_board(board)
      print(f"Player {current_player} wins!")
      while True:  # Loop until valid input
          play_again = input("Play again? (y/n): ").lower()
          if play_again == "y":
              board, current_player = reset_game()
              print("Game reset. New game starts.")  
              break
          elif play_again == "n":
              game_running = False
              break
          else:
              print("Invalid input. Please enter 'y' or 'n'.")
  elif is_board_full(board):
      display_board(board)
      print("It's a draw!")
      while True:  # Loop until valid input
          play_again = input("Play again? (y/n): ").lower()
          if play_again == "y":
              board, current_player = reset_game()
              print("Game reset. New game starts.")  
              break  # Exit the inner loop
          elif play_again == "n":
              game_running = False
              break
          else:
              print("Invalid input. Please enter 'y' or 'n'.")

  if board == reset_game()[0] and current_player == reset_game()[1]:
        current_player = "X"
  elif game_running:
      current_player = "O" if current_player == "X" else "X"
